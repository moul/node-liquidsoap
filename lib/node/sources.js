// Generated by CoffeeScript 1.4.0
(function() {
  var API, Single,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  API = require("../api").API;

  API.Blank = (function(_super) {

    __extends(Blank, _super);

    function Blank() {
      return Blank.__super__.constructor.apply(this, arguments);
    }

    Blank.path = "/blank";

    return Blank;

  })(API.Private.Source);

  Single = (function(_super) {

    __extends(Single, _super);

    function Single() {
      return Single.__super__.constructor.apply(this, arguments);
    }

    Single.path = "/single";

    return Single;

  })(API.Private.Source);

  API.Request = {};

  API.Request.Queue = (function(_super) {

    __extends(Queue, _super);

    function Queue() {
      this.push = __bind(this.push, this);
      return Queue.__super__.constructor.apply(this, arguments);
    }

    Queue.path = "/request/queue";

    Queue.prototype.push = function(requests, fn) {
      if (!(requests instanceof Array)) {
        requests = [requests];
      }
      return this.http_request({
        method: "PUT",
        path: "/sources/" + this.name + "/requests",
        query: requests
      }, fn);
    };

    return Queue;

  })(API.Private.Source);

  API.Request.Dynamic = (function(_super) {

    __extends(Dynamic, _super);

    function Dynamic() {
      return Dynamic.__super__.constructor.apply(this, arguments);
    }

    Dynamic.path = "/request/dynamic";

    return Dynamic;

  })(API.Private.Source);

  API.Input = {};

  API.Input.Http = (function(_super) {

    __extends(Http, _super);

    function Http() {
      return Http.__super__.constructor.apply(this, arguments);
    }

    Http.path = "/input/http";

    return Http;

  })(API.Private.Stateful);

}).call(this);
