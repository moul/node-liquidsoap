// Generated by CoffeeScript 1.6.2
(function() {
  var API, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  API = require("../api").API;

  API.Output = {};

  API.Output.Ao = (function(_super) {
    __extends(Ao, _super);

    function Ao() {
      _ref = Ao.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Ao.path = "/output/ao";

    return Ao;

  })(API.Private.Stateful);

  API.Output.Dummy = (function(_super) {
    __extends(Dummy, _super);

    function Dummy() {
      _ref1 = Dummy.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Dummy.path = "/output/dummy";

    return Dummy;

  })(API.Private.Stateful);

  API.Output.Icecast = function(opts) {
    var key, output, value, _ref2, _ref3;

    output = API.Private.IcecastWrapper;
    if ((_ref2 = output.opts) == null) {
      output.opts = {};
    }
    output.opts.mount = opts['mount'];
    _ref3 = opts['encoder'].opts;
    for (key in _ref3) {
      value = _ref3[key];
      output.opts["encoder_" + key] = value;
    }
    return output;
  };

}).call(this);
